/* 基础样式与标题样式 */
html {
    box-sizing: border-box;
}
*,
*::before,
*::after {
    box-sizing: inherit;
}

body {
    background-color: hsl(200, 80%, 30%);
    /* 深色背景渐变，径向渐变 */
    background-image: radial-gradient(hsl(200, 80%, 30%),
                                        hsl(210, 80%, 20%));
    color: white;
    font-family: Raleway, Arial, Helvetica, sans-serif;
    line-height: 1.4;
    /* 确保body元素填满整个视窗 */
    /* 这样渐变就会填满屏幕 */
    margin: 0;
    min-height: 100vh;
}

h1, h2, h3 {
    font-family: Alfa Slab One, serif;
    font-weight: 400;
}

main {
    display: block;
}

img {
    max-width: 100%;
}

.page-header {
    /* 消除用户代理样式 */
    margin: 0;
    padding: 1rem;
}
/* 在较大的屏幕上为头部设置较大的内边距 */
@media (min-width: 30em) {
    .page-header {
        padding: 2rem 2rem 3rem;
    }
}

/* 菜单样式设计 */
/* 移动优先 */
.nav-links {
    /* (li为块级元素) */
    display: flex;
    justify-content: space-between;
    /* 消除用户代理样式 */
    margin-top: 0;
    margin-bottom: 1rem;
    padding: 0 1rem;
    list-style: none;
}
.nav-links > li + li {
    margin-left: 0.8em;
}
.nav-links > li > a {
    color: white;
    display: block;
    padding: 0.8em 0;
    /* 为链接文本添加样式 */
    font-size: 0.8rem;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.06em;
}
.nav-links__icon {
    height: 1.5em;
    width: 1.5em;
    /* 把图标向下稍微移动，以便于文本标签对齐 */
    vertical-align: -0.3em;
}
.nav-links > li > a:hover {
    /* 设置一种明亮的颜色 */
    color: hsl(40, 100%, 70%);
}
/* 在较大的屏幕上 */
@media (min-width: 30em){
    .main-nav {
        /* 确保导航显示在网页后续新增内容的前面 */
        position: fixed;
        top: 8.25rem;
        left: 0;
        z-index: 10;
        /* 开始时保持透明 */
        background-color: transparent;
        /* 对背景色属性使用线性过渡 */
        transition: backgound-color .5s linear;
        /* 右上于右下圆角 */
        border-top-right-radius: 0.5em;
        border-bottom-right-radius: 0.5em;
    }
    
    /* 覆盖移动样式中的Flexbox */
    .nav-links {
        display: block;
        padding: 1em;
        margin-bottom: 0;
    }
    .nav-links > li + li {
        margin-left: 0;
    }
    .nav-links__label {
        /* 把标签设为行内块级元素，这样就可以对其使用变换了 */
        display: inline-block;
        margin-left: .6em;
        padding-right: 1em;
        /* 开始时隐藏标签 */
        opacity: 0;
        transform: translate(-1em);
        /* 为要改变的属性添加过渡 */
        transition: transform 0.4s cubic-bezier(0.2, 0.9, 0.3, 1.3),
                    opacity 0.4s linear;
    }
    .nav-links:hover .nav-links__label,
    .nav-links a:focus > .nav-links__label {
        opacity: 1;
        /* 移回正确位置 */
        transform: translate(0);
    }
    /* 交错显示过渡 */
    .nav-links > li:nth-child(2) .nav-links__label {
        transition-delay: 0.1s;
    }
    .nav-links > li:nth-child(3) .nav-links__label {
        transition-delay: 0.2s;
    }
    .nav-links > li:nth-child(4) .nav-links__label {
        transition-delay: 0.3s;
    }
    /* focus时没有延迟 */
    .nav-links a:focus > .nav-links__label {
        transition-delay: 0s;
    }
    

    /* 为图标的transform属性添加过渡 */
    .nav-links__icon{
        transition: transform 0.2s ease-out;
    }
    /* 使用transform增大图标尺寸 */
    .nav-links a:hover > .nav-links__icon,
    .nav-links a:focus > .nav-links__icon{
        transform: scale(1.3);
    }
}

.main-nav:hover {
    /* 深色半透明 */
    background-color: rgba(0, 0, 0, 0.6);
}


.card {
    padding: 0.5em;
    max-width: 300px;
    margin: 0 auto;
    background-color: white;
    color: black;
    /* 使卡片向右旋转15度 */
    transform: rotate(15deg);
    /* 向左30度 */
    transform: rotate(-90deg);
    /* 倾斜 */
    transform: skew(60deg);
    transform: skew(-20deg);
    /* 缩放，>1放大，<1缩小 */
    transform: scale(0.5);
    /* 移动，translate(x,y) */
    transform: translate(20px,40px);
    transform: translate(-20px,-40px);
    /* 注：不会脱离文档流，不会导致其他元素的移动 */
    /* 注：transform不能用在行内元素， */
    /*  如果一定要用，
        方案一：display:inline -> inline-block
        方案二：父元素display:flex 或 grid     */
    
    /* 基点设置 */
    /* 以下两种方式等价 */
    transform-origin: right center;
    transform-origin: 100% 50%;
    /* 多重变换 */
    /* 顺序有影响 */
    transform: rotate(15deg) translate(15px, 0);
    transform: translate(15px, 0) rotate(15deg);

    transform-origin: center;
    /* transform: rotateX(90deg); */
    /* 背面不可见设置 */
    backface-visibility: hidden;
    transform: perspective(200px) rotateX(180deg);
    /* 取消变换 */
    transform: none;
}

/* 每个box单独的透视距离 */
.row {
    margin-top: 1em;
    display: flex;
    justify-content: center;
}

.box {
    width: 150px;
    margin: 0 2em;
    padding: 60px 0;
    text-align: center;
    background-color: hsl(150, 50%, 40%);
    /* 变换：设置透视距离，并向后旋转30度 */
    transform: perspective(200px) rotateX(40deg);
}

/* 四个盒子统一的透视距离 */
.row {
    perspective: 200px;
}
.box {
    transform: rotateX(40deg);
}